# Lit Responsibly automation blueprint for Minoston MR40Z Remote Control Switch
# This blueprint is designed for use with the ZWave JS integration.
---
blueprint:
  name: Minoston MR40Z Remote Control Switch
  description: Create automations for the Minoston MR40Z Remote Control Switch.
  domain: automation
  input:
    minoston_mr40z:
      name: Minoston MR40Z
      description: Available Minoston MR40Z devices.
      selector:
        device:
          integration: zwave_js
          manufacturer: Minoston
          model: MR40Z
          multiple: true
    command_class:
      name: Trigger Command Class
      description: Command class to trigger the automation.
      default: '91'
      selector:
        select:
          options:
            - value: '91'
              label: Central Scene
            - value: '32'
              label: Basic
            - value: '37'
              label: Switch Binary
    automation_mode:
      name: Automation mode
      description: See https://www.home-assistant.io/docs/automation/modes/
      default: single
      selector:
        select:
          options:
            - single
            - restart
            - queued
            - parallel
    single_press:
      name: Single Press
      icon: mdi:gesture-tap
      description: Actions for single button presses.
      collapsed: true
      input:
        button_1:
          name: Button 1 (Top Large) Press
          description: Action to run when Button 1 is pressed one time.
          default: []
          selector:
            action: {}
        button_2:
          name: Button 2 (Middle Large) Press
          description: Action to run when Button 2 is pressed one time.
          default: []
          selector:
            action: {}
        button_3:
          name: Button 3 (Bottom Left) Press
          description: Action to run when Button 3 is pressed one time.
          default: []
          selector:
            action: {}
        button_4:
          name: Button 4 (Bottom Right) Press
          description: Action to run when Button 4 is pressed one time.
          default: []
          selector:
            action: {}
    hold_release:
      name: Hold and Release
      icon: mdi:gesture-tap-hold
      description: Actions when a button is held and released.
      collapsed: true
      input:
        button_1_hold:
          name: Button 1 (Top Large) Hold
          description: Action to run when Button 1 is pressed and held.
          default: []
          selector:
            action: {}
        button_1_release:
          name: Button 1 (Top Large) Hold Release
          description: Action to run when Button 1 is released from hold.
          default: []
          selector:
            action: {}
        button_2_hold:
          name: Button 2 (Middle Large) Hold
          description: Action to run when Button 2 is pressed and held.
          default: []
          selector:
            action: {}
        button_2_release:
          name: Button 2 (Middle Large) Hold Release
          description: Action to run when Button 2 is released from hold.
          default: []
          selector:
            action: {}
        button_3_hold:
          name: Button 3 (Bottom Left) Hold
          description: Action to run when Button 3 is pressed and held.
          default: []
          selector:
            action: {}
        button_3_release:
          name: Button 3 (Bottom Left) Hold Release
          description: Action to run when Button 3 is released from hold.
          default: []
          selector:
            action: {}
        button_4_hold:
          name: Button 4 (Bottom Right) Hold
          description: Action to run when Button 4 is pressed and held.
          default: []
          selector:
            action: {}
        button_4_release:
          name: Button 4 (Bottom Right) Hold Release
          description: Action to run when Button 4 is released from hold.
          default: []
          selector:
            action: {}
    double_press:
      name: Double Press
      icon: mdi:gesture-double-tap
      description: Actions when a button is pressed 2 times.
      collapsed: true
      input:
        button_1_2x:
          name: Button 1 (Top Large) Double Press
          description: Action to run when Button 1 is pressed 2 times.
          default: []
          selector:
            action: {}
        button_2_2x:
          name: Button 2 (Middle Large) Double Press
          description: Action to run when Button 2 is pressed 2 times.
          default: []
          selector:
            action: {}
        button_3_2x:
          name: Button 3 (Bottom Left) Double Press
          description: Action to run when Button 3 is pressed 2 times.
          default: []
          selector:
            action: {}
        button_4_2x:
          name: Button 4 (Bottom Right) Double Press
          description: Action to run when Button 4 is pressed 2 times.
          default: []
          selector:
            action: {}
    triple_press:
      name: Triple Press
      icon: mdi:gesture-double-tap
      description: Actions when a button is pressed 3 times.
      collapsed: true
      input:
        button_1_3x:
          name: Button 1 (Top Large) Triple Press
          description: Action to run when Button 1 is pressed 3 times.
          default: []
          selector:
            action: {}
        button_2_3x:
          name: Button 2 (Middle Large) Triple Press
          description: Action to run when Button 2 is pressed 3 times.
          default: []
          selector:
            action: {}
        button_3_3x:
          name: Button 3 (Bottom Left) Triple Press
          description: Action to run when Button 3 is pressed 3 times.
          default: []
          selector:
            action: {}
        button_4_3x:
          name: Button 4 (Bottom Right) Triple Press
          description: Action to run when Button 4 is pressed 3 times.
          default: []
          selector:
            action: {}
    quadruple_press:
      name: Quadruple Press
      icon: mdi:gesture-double-tap
      description: Actions when a button is pressed 4 times.
      collapsed: true
      input:
        button_1_4x:
          name: Button 1 (Top Large) Quadruple Press
          description: Action to run when Button 1 is pressed 4 times.
          default: []
          selector:
            action: {}
        button_2_4x:
          name: Button 2 (Middle Large) Quadruple Press
          description: Action to run when Button 2 is pressed 4 times.
          default: []
          selector:
            action: {}
        button_3_4x:
          name: Button 3 (Bottom Left) Quadruple Press
          description: Action to run when Button 3 is pressed 4 times.
          default: []
          selector:
            action: {}
        button_4_4x:
          name: Button 4 (Bottom Right) Quadruple Press
          description: Action to run when Button 4 is pressed 4 times.
          default: []
          selector:
            action: {}
    quintuple_press:
      name: Quintuple Press
      icon: mdi:gesture-double-tap
      description: Actions when a button is pressed 5 times.
      collapsed: true
      input:
        button_1_5x:
          name: Button 1 (Top Large) Quintuple Press
          description: Action to run when Button 1 is pressed 5 times.
          default: []
          selector:
            action: {}
        button_2_5x:
          name: Button 2 (Middle Large) Quintuple Press
          description: Action to run when Button 2 is pressed 5 times.
          default: []
          selector:
            action: {}
        button_3_5x:
          name: Button 3 (Bottom Left) Quintuple Press
          description: Action to run when Button 3 is pressed 5 times.
          default: []
          selector:
            action: {}
        button_4_5x:
          name: Button 4 (Bottom Right) Quintuple Press
          description: Action to run when Button 4 is pressed 5 times.
          default: []
          selector:
            action: {}
  source_url: https://github.com/LitResponsibly/hassio-blueprints/blob/master/automation/minoston/minoston-mr40z-remote-control-switch-scenes.yaml
mode: !input automation_mode
max_exceeded: silent
variables:
  device_ids: !input minoston_mr40z
  command_class: !input command_class
trigger:
  - platform: event
    event_type: zwave_js_value_notification
condition: '{{ trigger.event.data.command_class|int(0) == command_class|int(0) and trigger.event.data.device_id in device_ids }}'
action:
- variables:
    command_class_name: '{{ trigger.event.data.command_class_name }}'
    property_key: '{{ trigger.event.data.property_key }}'
    label: '{{ trigger.event.data.label }}'
    value: '{{ trigger.event.data.value }}'
- service: logbook.log
  data:
    name: Z-Wave JS
    message: 'received event: {{ command_class_name }} - {{ label }} - {{ value }}'
- choose:
  - conditions: '{{ property_key == ''001'' }}'
    sequence:
    - choose:
      - conditions: '{{ value == ''KeyPressed'' }}'
        sequence: !input button_1
      - conditions: '{{ value == ''KeyPressed2x'' }}'
        sequence: !input button_1_2x
      - conditions: '{{ value == ''KeyPressed3x'' }}'
        sequence: !input button_1_3x
      - conditions: '{{ value == ''KeyPressed4x'' }}'
        sequence: !input button_1_4x
      - conditions: '{{ value == ''KeyPressed5x'' }}'
        sequence: !input button_1_5x
      - conditions: '{{ value == ''KeyHeldDown'' }}'
        sequence: !input button_1_hold
      - conditions: '{{ value == ''KeyReleased'' }}'
        sequence: !input button_1_release
  - conditions: '{{ property_key == ''002'' }}'
    sequence:
    - choose:
      - conditions: '{{ value == ''KeyPressed'' }}'
        sequence: !input button_2
      - conditions: '{{ value == ''KeyPressed2x'' }}'
        sequence: !input button_2_2x
      - conditions: '{{ value == ''KeyPressed3x'' }}'
        sequence: !input button_2_3x
      - conditions: '{{ value == ''KeyPressed4x'' }}'
        sequence: !input button_2_4x
      - conditions: '{{ value == ''KeyPressed5x'' }}'
        sequence: !input button_2_5x
      - conditions: '{{ value == ''KeyHeldDown'' }}'
        sequence: !input button_2_hold
      - conditions: '{{ value == ''KeyReleased'' }}'
        sequence: !input button_2_release
  - conditions: '{{ property_key == ''003'' }}'
    sequence:
    - choose:
      - conditions: '{{ value == ''KeyPressed'' }}'
        sequence: !input button_3
      - conditions: '{{ value == ''KeyPressed2x'' }}'
        sequence: !input button_3_2x
      - conditions: '{{ value == ''KeyPressed3x'' }}'
        sequence: !input button_3_3x
      - conditions: '{{ value == ''KeyPressed4x'' }}'
        sequence: !input button_3_4x
      - conditions: '{{ value == ''KeyPressed5x'' }}'
        sequence: !input button_3_5x
      - conditions: '{{ value == ''KeyHeldDown'' }}'
        sequence: !input button_3_hold
      - conditions: '{{ value == ''KeyReleased'' }}'
        sequence: !input button_3_release
  - conditions: '{{ property_key == ''004'' }}'
    sequence:
    - choose:
      - conditions: '{{ value == ''KeyPressed'' }}'
        sequence: !input button_4
      - conditions: '{{ value == ''KeyPressed2x'' }}'
        sequence: !input button_4_2x
      - conditions: '{{ value == ''KeyPressed3x'' }}'
        sequence: !input button_4_3x
      - conditions: '{{ value == ''KeyPressed4x'' }}'
        sequence: !input button_4_4x
      - conditions: '{{ value == ''KeyPressed5x'' }}'
        sequence: !input button_4_5x
      - conditions: '{{ value == ''KeyHeldDown'' }}'
        sequence: !input button_4_hold
      - conditions: '{{ value == ''KeyReleased'' }}'
        sequence: !input button_4_release

